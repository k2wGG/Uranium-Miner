// src/core/reload.cjs
/**
 * –ü–ª–∞–Ω–æ–≤–∞—è/–∂—ë—Å—Ç–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ page.waitForTimeout.
 * ‚Ä¢ scheduleReload/cancelReloadTimer
 * ‚Ä¢ hardReload: about:blank ‚Üí home —Å cache-buster, —Ç–µ—Ä–ø–∏–º ERR_ABORTED
 * ‚Ä¢ setReloadConfig: rotateProxyOnReload + –ø–µ—Ä–∏–æ–¥
 */

const { URL_HOME, sleep, safeGoto, waitForUIReady } = require('./navigation.cjs');
const fs = require('fs').promises;
const path = require('path');

let RELOAD_CFG = {
  rotateProxyOnReload: false,
  reloadSec: 900
};
let reloadTimer = null;

function setReloadConfig(cfg = {}) {
  RELOAD_CFG = { ...RELOAD_CFG, ...cfg };
}

function cancelReloadTimer() {
  if (reloadTimer) {
    clearTimeout(reloadTimer);
    reloadTimer = null;
  }
}

/**
 * –ü–ª–∞–Ω–æ–≤–∞—è –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞: –∑–æ–≤—ë—Ç cb() –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.
 * cb() ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –≥–¥–µ –≤—ã –¥–µ–ª–∞–µ—Ç–µ hardReload + –æ–∂–∏–¥–∞–Ω–∏—è UI.
 */
function scheduleReload(cb) {
  cancelReloadTimer();
  if (!RELOAD_CFG.reloadSec || RELOAD_CFG.reloadSec <= 0) return;

  const nextMs = RELOAD_CFG.reloadSec * 1000;
  reloadTimer = setTimeout(async () => {
    try {
      await cb();
    } catch (e) {
      // –ø—Ä–æ–≥–ª–∞—Ç—ã–≤–∞–µ–º, –ª–æ–≥–∏—Ä—É–π—Ç–µ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ
    } finally {
      // –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä—É–µ–º –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
      scheduleReload(cb);
    }
  }, nextMs);
}

/**
 * –ñ—ë—Å—Ç–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∫–ª–∞–¥–∫–∏.
 * –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å rotateProxyOnReload –Ω–∞ —É—Ä–æ–≤–Ω–µ –≤–∞—à–µ–≥–æ –ª–∞—É–Ω—á–µ—Ä–∞/–±—Ä–∞—É–∑–µ—Ä–∞,
 * –∑–¥–µ—Å—å ‚Äî —Ç–æ–ª—å–∫–æ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏.
 */
async function hardReload({ page, config, log = console.log }) {
  try {
    log('WRN', 'üö® –ñ—ë—Å—Ç–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞‚Ä¶');
  } catch {}

  // –°–∫—Ä–∏–Ω –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π
  try {
    await fs.mkdir(path.resolve(process.cwd(), 'screenshots'), { recursive: true });
    await page.screenshot({ path: path.resolve(process.cwd(), `screenshots/reload_before_${Date.now()}.png`) })
      .catch(()=>{});
  } catch {}

  // about:blank ‚Üí home —Å cache buster
  try { await page.goto('about:blank').catch(()=>{}); } catch {}
  await sleep(150);

  const busterUrl = `${URL_HOME}?_=${Date.now()}`;
  try {
    await safeGoto(page, busterUrl, 'reload');
  } catch (e) {
    // —Ç–µ—Ä–ø–∏–º–æ: –∏–Ω–æ–≥–¥–∞ –±—Ä–æ—Å–∞–µ—Ç ERR_ABORTED, –Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ
    if (!/ERR_ABORTED/i.test(String(e.message||''))) {
      try { log('ERR', `hardReload goto: ${e.message}`); } catch {}
    }
  }

  // –ï—Å–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–Ω—É–ª–æ –Ω–∞ /auth ‚Äî –¥–∞–¥–∏–º –≤—Ä–µ–º—è –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
  try {
    const isAuth = await page.evaluate(() => /\/auth\b/.test(location.pathname)).catch(()=>false);
    if (isAuth) {
      // –∂–¥—ë–º –¥–æ 3 –º–∏–Ω—É—Ç ¬´—Å–∞–º–æ–ª–æ–≥–∏–Ω–∞¬ª
      const t0 = Date.now();
      while (Date.now() - t0 < 180_000) {
        const done = await page.evaluate(() => !/\/auth\b/.test(location.pathname)).catch(()=>false);
        if (done) break;
        await sleep(1000);
      }
    } else {
      // —á—É—Ç—å –ø–æ–¥–æ–∂–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–µ–≤
      await waitForUIReady(page, { totalTimeoutMs: 12_000, pollMs: 300 });
    }
  } catch {}

  // –°–∫—Ä–∏–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
  try {
    await page.screenshot({ path: path.resolve(process.cwd(), `screenshots/reload_after_${Date.now()}.png`) })
      .catch(()=>{});
  } catch {}
}

module.exports = {
  setReloadConfig,
  scheduleReload,
  cancelReloadTimer,
  hardReload,
};
